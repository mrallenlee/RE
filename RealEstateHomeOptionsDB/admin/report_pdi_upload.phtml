<?
/**
 * Upload PDI or Day 30 signed report, and store the filepath to the DB
 * Return JSON array on the result
 * Image filepath is based on the PDI modules located, which is RealEstateHomeOptions/admin 
 * or use the constant PDI_RELATIVE_PATH
 */

include "main_include.phtml";
// Return rows for messages
$rtn_rows = array();


/**
 * Print json encode message, and return
 */
function returnJSONMsg($rtn_rows){
    echo json_encode($rtn_rows);
    exit;
    return;
} // returnJSONMsg


/**
 * Update DB PDIDefect table on the new upload file
 * Return treu if successful
 * Return json error message
 */
function updateDBFileName($unitNumber, $component, $reportType, $filepath){

    if ($reportType == 'PDI'){
        $columnName     = 'PDIReportFilePath'; 
    } else if ($reportType == 'Day30'){
        $columnName     = 'PDIDay30ReportFilePath'; 
    } 

    $sql    = "Update Unit set " . $columnName . "='" . $filepath . "' where UnitNumber='" . $unitNumber . "'";
	$result = mysql_query($sql);
			
    if (!$result) {
        $errors= error_get_last();

        $rtn_rows['status']	= "ERROR";
        $rtn_rows['message']= "System error message from SQL [$sql] " . $errors['type'] . " : " . $errors['message'];
        returnJSONMsg($rtn_rows);
    }    
    else {
        $rtn_rows['status']	= "SUCCESS";
        $rtn_rows['message']= "File uploaded successfully!";

    }

    returnJSONMsg($rtn_rows);

} // updateDBFileName

$component  = 'PDI';
$reportType = $_POST['reportType'];
$unitNumber  = $_POST['unitNumber'];
$fileName   = $unitNumber . "_" . $reportType . "_" . time() . ".png";

// Check if query string are set properly
if (!isset($component) || $component == "") {
	$rtn_rows['status']	= "ERROR";
	$rtn_rows['message']= "Missing component";
	returnJSONMsg($rtn_rows);
}

// Check if query string are set properly
if (!isset($unitNumber) || $unitNumber == "") {
	$rtn_rows['status']	= "ERROR";
	$rtn_rows['message']= "Missing unitNumber";
    returnJSONMsg($rtn_rows);
}


// Check if query string are set properly
if (!isset($reportType) || $reportType == "") {
	$rtn_rows['status']	= "ERROR";
	$rtn_rows['message']= "Missing reportType";
    returnJSONMsg($rtn_rows);
}

// Set up directory
if ($component == 'PDI') {
	$dir = "../images/" . $component . "/" . $unitNumber . "/" . $reportType . "/";
}

// Check if dir exist, create otherwise
if (!file_exists($dir)) {
    mkdir($dir, 0775, true);
}

$filePath = $dir . $fileName;

$img        = $_POST['imgBase64'];
$orgImgSize = $_POST['imgSize'];
$imgSize    = strlen($img);
$img        = str_replace('data:image/png;base64,', '', $img);
$img        = str_replace(' ', '+', $img);
$fileData   = base64_decode($img);
//saving
// Original way to write the uploaded image to file path
$result     = file_put_contents($filePath, $fileData);

$isFileValid = false;


// $result > 0 means number of bytes written
if ($result > 0){
    // If uploaded file size not equal to original file size provided by the client, return error
    if ($orgImgSize > 0 && $imgSize != $orgImgSize){
        $rtn_rows['status']	= "ERROR";
        $rtn_rows['message']= "Uploaded image is corrupted. Please kindly upload again. Original file size=" . $orgImgSize . " Uploaded file size=" . $imgSize;    
    }
    else if (exif_imagetype($filePath) <= 0) {
        $rtn_rows['status']	= "ERROR";
        $rtn_rows['message']= "Uploaded file is not an image. Please kindly upload again. size=" . $imgSize;    
    } else {
        $isFileValid = true;
    }
} else {
	$rtn_rows['status']	= "ERROR";
	$rtn_rows['message']= "System cannot copy or upload file. Please kindly upload again.";    
}

if ($isFileValid) {
			// Prepare return status
			$rtn_rows['status'] 	= "SUCCESS";
			$rtn_rows['message']	= "Image uploaded successfully";
			$rtn_rows['filePath'] 	= $dir . $fileName;
			$rtn_rows['fileName']	= $fileName;
			$rtn_rows['dirName']	= $dir;

    $result_rows = updateDBFileName($unitNumber, $component, $reportType, $filePath);
    if ($result_rows['status'] == 'ERROR'){
        $rtn_rows = $result_rows;
    }

} 
// else {
// 	$rtn_rows['status']	= "ERROR";
// 	$rtn_rows['message']= "System error message " . $errors['type'] . " : " . $errors['message'];
// }

// Set http header error
returnJSONMsg($rtn_rows);
?>