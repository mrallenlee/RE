<?
include_once "../admin/main_include.phtml";

/** 
 * Generate CCP from the template, and date it with current date
 * action       : 
 *      1. getcurrent (get existing CCP document, return null if no document)
 *      2. regenerate (Regenerate CCP document)
 *      3. get (get existing CCP document, generate new one if no existing CCP doc)
 * output       : filename(default)/data
 * unitNumber   : Unit Number
 * signedDate   : date on the document, use current date if it is not provided
 */


define("CCP_FOLDER_PATH","../images/PDI/CCP/");
date_default_timezone_set('America/Toronto');
use setasign\Fpdi\Fpdi;


// Return rows for messages
$rtn_rows = array();


/**
 * Print json encode message, and return
 */
function returnJSONMsg($rtn_rows, $print=true){
    if ($print){
        echo json_encode($rtn_rows);
        exit;
        return;
    }
    else return json_encode($rtn_rows);

} // returnJSONMsg


function getSrcFileName($unitNumber){
    return CCP_FOLDER_PATH . "CCP_" . $unitNumber . ".pdf"; 
}

function getOutputFileName($unitNumber){
    return CCP_FOLDER_PATH . $unitNumber . "_CCP_Signed.pdf"; 
}

function getSignedDate(){
    return  date('M d, Y');
}

/**
 * Get current file if exists, otherwise generate a new one
 */
function getCCPFile($srcFileName, $fileName, $signedDate){
    $rtn_rows = array();
    if (file_exists($fileName)){
        $rtn_rows['filename']   = $fileName;
        $rtn_rows['status']     = "SUCCESS";
        // Set http header error
        return returnJSONMsg($rtn_rows, false); 
    }

    // echo ("srcFileName=$srcFileName");
    $data = generateCCPFile($srcFileName, $fileName, $signedDate);
    $rtn_rows['data']       = $data;
    $rtn_rows['filename']   = $fileName;
    $rtn_rows['status']     = "SUCCESS";
    // Set http header error
    return returnJSONMsg($rtn_rows, false);     
}

function generateCCPFile($srcFileName, $fileName, $signedDate){
    $rtn_rows = array();


    if (!file_exists($srcFileName)){
        // source file doesn't exist, return error
        $rtn_rows['filename']   = $srcFileName;
        $rtn_rows['status']     = "ERROR";        
        $rtn_rows['message']    = "Source file $srcFileName does not exist";        
        return returnJSONMsg($rtn_rows, false);      
    }
    require('fpdf/fpdf.php');

    // setup the autoload function
    require_once('fpdi/src/autoload.php');

    $pdf = new FPDI('P','mm','A4');
    // $pdf->AddPage(););
    $pdf->AddPage();
    // set the source file
    $pdf->setSourceFile($srcFileName);
    // import page 1
    $tplId = $pdf->importPage(1);
    // use the imported page and place it at point 10,10 with a width of 100 mm
    $pdf->useTemplate($tplId, 10, 10, 200);
    $pdf->SetFont('Arial','B',10);

    $pdf->SetY(-51);
    $pdf->SetX(-55);
    $pdf->Cell(20,5, $signedDate);

    $data   =  $pdf->Output('F', $fileName);
    $rtn_rows['data']       = $data;
    $rtn_rows['filename']   = $fileName;
    $rtn_rows['status']     = "SUCCESS";

    return returnJSONMsg($rtn_rows, false);      

    // return $pdf->Output();            
} // generateCCPFile;  

$action     = $_GET['action'];
$output     = $_GET['output'];
$unitNumber = $_GET['unitNumber'];
$signedDate = $_GET['signedDate'];

if ($signedDate == "") $signedDate = getSignedDate();

// Signed File Name
$fileName = getOutputFileName($unitNumber);
// Source File Name
$srcFileName = getSrcFileName($unitNumber);

if ($action == "getcurrent") {
    if (file_exists($fileName)){
        $rtn_rows['filename']   = $fileName;
        $rtn_rows['status']     = "SUCCESS";
        // Set http header error
        return returnJSONMsg($rtn_rows); 
    } else {
        $rtn_rows['status']     = "ERROR";
        $rtn_rows['message']    = "CCP has not been processed";
        // Set http header error
        return returnJSONMsg($rtn_rows); 
    }
} else if ($action == "get"){
    $jsonMsg =  getCCPFile($srcFileName, $fileName, $signedDate);
    returnJSONMsg($jsonMsg);
    // if (file_exists($fileName)){
    //     $rtn_rows['filename']   = $fileName;
    //     $rtn_rows['status']     = "SUCCESS";
    //     // Set http header error
    //     returnJSONMsg($rtn_rows); 
    // }

    // $data = generateFile($srcFileName, $fileName, $signedDate);
    // $rtn_rows['data']       = $data;
    // $rtn_rows['filename']   = $fileName;
    // $rtn_rows['status']     = "SUCCESS";
    // // Set http header error
    // returnJSONMsg($rtn_rows); 

} else if ($action == "regenerate") {
    $data = generateCCPFile($srcFileName, $fileName, $signedDate);
    $rtn_rows['data']       = $data;
    $rtn_rows['filename']   = $fileName;
    $rtn_rows['status']     = "SUCCESS";
    // Set http header error
    return returnJSONMsg($rtn_rows); 
}


// echo "SUCCESS";
?>
